{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","src","alt","Cardlist","robots","map","user","i","Searchbox","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","responce","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAeeA,G,KAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACrB,OACI,cAAC,WAAD,UACI,sBAAKC,UAAU,sCAAf,UACI,qBAAKC,IAAG,+BAA0BH,EAA1B,iBAA6CI,IAAI,cACzD,6BAAKL,IACL,4BAAIE,WCULI,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,cAAC,WAAD,UACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACA,cAAC,EAAD,CAAcT,GAAIQ,EAAKR,GAAID,KAAMS,EAAKT,KAAME,MAAOO,EAAKP,OAA7CQ,WCGpBC,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOA,UAAU,+BAChBU,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCTI,EAPA,SAACC,GACZ,OACA,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACMJ,EAAMK,YCoBDC,E,kDAtBX,WAAYN,GACX,IAAD,8BACI,cAAMA,IACDO,MAAQ,CAAEC,UAAU,GAF7B,E,8DAKkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAA4B,IAAxBG,KAAKJ,MAAMC,SACJ,+DAGAG,KAAKX,MAAMK,a,GAhBHQ,aCsDZC,G,wDA/Cb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJJ,E,gEAQO,IAAD,OACjBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKZ,SAAS,CAAEtB,OAAQkC,S,+BAO/B,IAAD,EAC0Bb,KAAKJ,MAA7BjB,EADF,EACEA,OAAQ2B,EADV,EACUA,YAEVQ,EAAiBnC,EAAOoC,QAAQ,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAIvD,OAAqB,IAAlBtC,EAAOwC,OACD,oBAAI5C,UAAU,KAAd,qBAIL,cAAC,WAAD,UACE,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQmC,iB,GAtChBZ,cCIHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c456ac8e.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport 'tachyons';\r\n\r\nconst Card = ({name, id, email}) => {\r\n    return(\r\n        <Fragment>\r\n            <div className=\"bg-light-green dib br3 pa3 ma2 grow\">\r\n                <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robophoto\"></img>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { Fragment } from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n    return(\r\n        <Fragment>\r\n            <div>\r\n                {\r\n                    robots.map((user,i)=>{\r\n                        return(\r\n                        <Card key={i} id={user.id} name={user.name} email={user.email}></Card>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox = ({searchchange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--g bg-lightest-blue\"\r\n             type=\"search\" \r\n             placeholder=\"SEARCH ROBOTS\"\r\n             onChange={ searchchange }></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return ( \r\n    <div style={{overflowY: 'scroll', border: '2px solid black', height: '500px'}}>\r\n        { props.children }\r\n    </div> );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { hasError: false }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError === true) {\r\n            return <h1>Oops. Sorry for inconvenience</h1>\r\n        }\r\n        else{\r\n            return this.props.children\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, { Component, Fragment } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport 'tachyons';\nimport './app.css';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(responce=>responce.json())\n    .then(users=> this.setState({ robots: users }) );\n  }\n\n  onSearchChange = (event) =>{\n    this.setState({searchfield: event.target.value});\n  }\n  \n  render(){\n    const { robots, searchfield } = this.state;\n\n    const filteredRobots = robots.filter( robot =>{\n      return(robot.name.toLowerCase().includes(searchfield.toLowerCase()));\n    }\n    );\n\n    if(robots.length === 0){\n      return(<h1 className=\"tc\">LoAdInG</h1>);\n    }\n    else{\n      return (\n        <Fragment>\n          <div className=\"tc\">\n            <h1 className=\"f1\">Robo Friends</h1>\n            <Searchbox searchchange={ this.onSearchChange }></Searchbox>\n            <Scroll>\n              <ErrorBoundry>\n                <Cardlist robots={filteredRobots}></Cardlist>\n              </ErrorBoundry>\n            </Scroll>\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}